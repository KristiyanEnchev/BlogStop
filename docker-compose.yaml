services:
  # Database
  postgres:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-admin} -d postgres']
      interval: 10s
      timeout: 5s
      retries: 3

  # PG Admin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    restart: always
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/root/.pgadmin
    networks:
     - app-network

 # API (DotNet)
  api:
   build:
     context: ./Server
     dockerfile: ./API/Host/Dockerfile
   container_name: dotnet-api
   ports:
     - '8080:8080'
   depends_on:
     postgres:
       condition: service_healthy
   environment:
     - DOTNET_ENVIRONMENT=PROD
     - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
   networks:
     - app-network

 # Client (React + Vite)
  client:
   build:
     context: ./Client
     dockerfile: Dockerfile
     args:
       - VITE_API_BASE_URL=${VITE_API_BASE_URL}
   container_name: react-client
   ports:
     - '3000:80'
   depends_on:
     - api
   environment:
     - NODE_ENV=PROD
   networks:
     - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
